spring:
  application:
    name: sistema-java
  
  profiles:
    active: local
  
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    encoding: UTF-8
    mode: HTML
  
  datasource:
    url: jdbc:h2:mem:sistema_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  
  data:
    # Redis Configuration (Embedded Redis for local development)
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  mail:
    host: sandbox.smtp.mailtrap.io
    port: 2525
    username: 67af468e706c8e
    password: c9c83240f6d045
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            enable: false
        transport:
          protocol: smtp
    default-encoding: UTF-8
  
  cache:
    type: redis
    redis:
      time-to-live: 600000

# Configurações da aplicação
app:
  rsa:
    keys:
      directory: ./keys
  
  # Configurações de verificação de email
  email:
    enabled: true
    verification:
      url: "http://localhost:8080/verify-email"
      token:
        expiration:
          hours: 24
    
    # Configuração de provedor padrão
    default-provider: mailtrap
    
    # Configurações de fallback
    fallback:
      enabled: true
      provider: mailtrap
      
    # Configurações de retry para envio
    retry:
      enabled: true
      max-attempts: 3
      delay-ms: 2000
      backoff-multiplier: 2.0
      
    # Configurações de template
    templates:
      base-path: "classpath:/templates/email/"
      encoding: "UTF-8"
      cache-enabled: false
  
  # Configurações SMTP específicas
  smtp:
    # Configurações de retry
    retry:
      max-attempts: 3
      delay-ms: 1000
      backoff-multiplier: 2.0
    
    # Configurações de timeout
    timeout:
      connection-ms: 5000
      read-ms: 10000
      write-ms: 10000
    
    # Pool de conexões
    pool:
      max-connections: 10
      min-connections: 2
      idle-timeout-ms: 300000
    
    # Configurações de email padrão
    email:
      from: noreply@sistema.com
      reply-to: support@sistema.com
      bounce-address: bounce@sistema.com
      
    # Configurações de validação
    validation:
      test-email-on-startup: false
      validate-ssl-certificates: true
      connection-test-timeout-ms: 10000
    
    # Configurações por provedor
    providers:
      mailtrap:
        enabled: true
        host: sandbox.smtp.mailtrap.io
        port: 2525
        username: 67af468e706c8e
        password: c9c83240f6d045
        auth: true
        starttls: true
        ssl: false
        description: "Mailtrap - Ambiente de desenvolvimento para testes de email"
        from-email: "noreply@sistema.com"
      
      gmail:
        enabled: true
        host: smtp.gmail.com
        port: 587
        username: ${GMAIL_USERNAME:}
        password: ${GMAIL_APP_PASSWORD:fgsu vamy tghu ykiq}
        auth: true
        starttls: true
        ssl: false
        description: "Gmail SMTP - Produção com senha de aplicativo"
        from-email: ${GMAIL_FROM_EMAIL:sistema@gmail.com}
        properties:
          mail:
            smtp:
              ssl:
                trust: smtp.gmail.com
              socketFactory:
                class: javax.net.ssl.SSLSocketFactory
                fallback: false
      
      outlook:
        enabled: false
        host: smtp-mail.outlook.com
        port: 587
        username: ${OUTLOOK_USERNAME:}
        password: ${OUTLOOK_PASSWORD:}
        auth: true
        starttls: true
        ssl: false
        description: "Outlook/Hotmail SMTP"
        from-email: ${OUTLOOK_FROM_EMAIL:sistema@outlook.com}
  
  # Configurações de telemetria
  telemetry:
    enabled: true
    service-name: ${spring.application.name}
    environment: ${spring.profiles.active}
    version: ${app.version:1.0.0}
    
    # Configurações de métricas customizadas
    metrics:
      enabled: true
      custom-counters: true
      custom-timers: true
      custom-gauges: true
      business-metrics: true
      
      # Configurações específicas por domínio
      auth:
        enabled: true
        track-login-attempts: true
        track-registration: true
        track-password-reset: true
        track-token-generation: true
      
      email:
        enabled: true
        track-send-attempts: true
        track-send-success: true
        track-send-failures: true
        track-queue-size: true
      
      batch:
        enabled: true
        track-job-execution: true
        track-step-execution: true
        track-item-processing: true
        track-queue-processing: true
      
      database:
        enabled: true
        track-query-performance: true
        track-connection-pool: true
        track-transaction-duration: true
      
      cache:
        enabled: true
        track-hit-ratio: true
        track-evictions: true
        track-size: true
    
    # Configurações de tracing
    tracing:
      enabled: true
      sample-rate: 1.0
      max-spans-per-trace: 1000
      
      # Instrumentação automática
      auto-instrument:
        controllers: true
        services: true
        repositories: true
        external-calls: true
        database-queries: true
        cache-operations: true
        email-operations: true
        batch-operations: true
      
      # Configurações de baggage
      baggage:
        enabled: true
        fields:
          - user-id
          - session-id
          - request-id
          - correlation-id
    
    # Configurações de logging estruturado
    logging:
      enabled: true
      structured: true
      include-trace-id: true
      include-span-id: true
      include-baggage: true
      
      # Níveis de log por componente
      levels:
        telemetry: INFO
        metrics: DEBUG
        tracing: DEBUG
        instrumentation: INFO
    
    # Configurações de alertas
    alerts:
      enabled: true
      thresholds:
        error-rate: 0.05
        response-time-p95: 2000ms
        memory-usage: 0.85
        cpu-usage: 0.80
        disk-usage: 0.90
        
    # Configurações de exportadores
    exporters:
      console:
        enabled: false
        interval: 30s
      
      prometheus:
        enabled: true
        port: 9090
        path: /metrics
        
      jaeger:
        enabled: true
        endpoint: http://localhost:14268/api/traces
        
      otlp:
        enabled: true
        endpoint: http://localhost:4317
        protocol: grpc
        
      zipkin:
        enabled: false
        endpoint: http://localhost:9411/api/v2/spans

server:
  port: 8080
  servlet:
    context-path: /

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,httptrace,threaddump,heapdump,env,configprops,beans,mappings,scheduledtasks,caches,conditions,flyway,liquibase,loggers,auditevents,telemetry,system-health,security-metrics,performance-metrics,tracing,telemetry-test
      base-path: /actuator
      cors:
        allowed-origins: "*"
        allowed-methods: GET,POST
        allowed-headers: "*"
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
    httptrace:
      enabled: true
    threaddump:
      enabled: true
    heapdump:
      enabled: true
    env:
      enabled: true
      show-values: when-authorized
    configprops:
      enabled: true
      show-values: when-authorized
    beans:
      enabled: true
    mappings:
      enabled: true
    scheduledtasks:
      enabled: true
    caches:
      enabled: true
    conditions:
      enabled: true
    loggers:
      enabled: true
    auditevents:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        step: 10s
        descriptions: true
        histogram-flavor: prometheus
      simple:
        enabled: true
        step: 10s
    distribution:
      percentiles-histogram:
        http.server.requests: true
        spring.data.repository.invocations: true
        method.timed: true
      percentiles:
        http.server.requests: 0.5, 0.75, 0.95, 0.99
        spring.data.repository.invocations: 0.5, 0.75, 0.95, 0.99
        method.timed: 0.5, 0.75, 0.95, 0.99
      slo:
        http.server.requests: 10ms, 50ms, 100ms, 200ms, 500ms, 1s, 2s, 5s
        spring.data.repository.invocations: 1ms, 5ms, 10ms, 25ms, 50ms, 100ms, 250ms, 500ms
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active}
      version: ${app.version:1.0.0}
    web:
      server:
        request:
          autotime:
            enabled: true
            percentiles: 0.5, 0.75, 0.95, 0.99
            percentiles-histogram: true
  tracing:
    sampling:
      probability: 1.0
    baggage:
      correlation:
        enabled: true
      remote-fields: user-id, trace-id, span-id
    zipkin:
      endpoint: http://localhost:9411/api/v2/spans
    jaeger:
      endpoint: http://localhost:14268/api/traces

# Configurações do OpenTelemetry
otel:
  service:
    name: ${spring.application.name}
    version: ${app.version:1.0.0}
  resource:
    attributes:
      service.name: ${spring.application.name}
      service.version: ${app.version:1.0.0}
      service.environment: ${spring.profiles.active}
      service.instance.id: ${random.uuid}
  exporter:
    otlp:
      endpoint: http://localhost:4317
      protocol: grpc
      timeout: 30s
      compression: gzip
      headers:
        api-key: ${OTEL_API_KEY:}
    jaeger:
      endpoint: http://localhost:14250
      timeout: 30s
    prometheus:
      endpoint: http://localhost:9090
      timeout: 30s
  instrumentation:
    spring-webmvc:
      enabled: true
    spring-webflux:
      enabled: true
    spring-data:
      enabled: true
    jdbc:
      enabled: true
    redis:
      enabled: true
    http-clients:
      enabled: true
    logging:
      enabled: true
    micrometer:
      enabled: true
  traces:
    exporter: otlp,jaeger
  metrics:
    exporter: otlp,prometheus
  logs:
    exporter: otlp
  propagators: tracecontext,baggage,b3,jaeger,ottrace
  sampler:
    type: traceidratio
    arg: 1.0



# Configurações de logging
logging:
  level:
    com.sistema: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.springframework.mail: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Configurações específicas por ambiente
---
spring:
  config:
    activate:
      on-profile: development
      
app:
  email:
    default-provider: mailtrap
    smtp:
      validation:
        test-email-on-startup: true
        
logging:
  level:
    com.sistema: DEBUG
    org.springframework.mail: DEBUG

---
spring:
  config:
    activate:
      on-profile: production
      
app:
  email:
    default-provider: gmail
    smtp:
      validation:
        test-email-on-startup: false
        validate-ssl-certificates: true
        
logging:
  level:
    com.sistema: INFO
    org.springframework.mail: WARN
    org.hibernate.SQL: WARN