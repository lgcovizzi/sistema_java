<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
      xmlns:fn="http://xmlns.jcp.org/jsp/jstl/functions">

<ui:composition template="/WEB-INF/templates/template.xhtml">
    
    <ui:define name="title">
        #{msg['admin.comments.title']} - #{applicationBean.applicationName}
    </ui:define>
    
    <ui:define name="css">
        <!-- Referência: Sistema de Temas Claros e Escuros - project_rules.md -->
        <style type="text/css">
            .admin-header {
                background: linear-gradient(135deg, var(--blue-primary) 0%, var(--blue-secondary) 100%);
                color: var(--text-on-primary);
                padding: 2rem 0;
                margin-bottom: 2rem;
                border-radius: 10px;
                box-shadow: var(--shadow-lg);
            }
            
            .admin-title {
                font-size: 2rem;
                font-weight: bold;
                margin-bottom: 0.5rem;
            }
            
            .admin-subtitle {
                opacity: 0.9;
                font-size: 1.1rem;
            }
            
            .stats-cards {
                margin-bottom: 2rem;
            }
            
            .stat-card {
                background: var(--bg-primary);
                border-radius: 10px;
                padding: 1.5rem;
                box-shadow: var(--shadow-md);
                text-align: center;
                transition: all 0.3s ease;
                border: 1px solid var(--border-color);
            }
            
            .stat-card:hover {
                transform: translateY(-2px);
                box-shadow: var(--shadow-lg);
            }
            
            .stat-icon {
                font-size: 2.5rem;
                margin-bottom: 1rem;
            }
            
            .stat-number {
                font-size: 2rem;
                font-weight: bold;
                color: var(--text-primary);
                margin-bottom: 0.5rem;
            }
            
            .stat-label {
                color: var(--text-secondary);
                font-size: 0.9rem;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }
            
            .stat-total { color: var(--blue-secondary); }
            .stat-approved { color: var(--success-color); }
            .stat-pending { color: var(--warning-color); }
            .stat-rejected { color: var(--danger-color); }
            
            .filters-panel {
                background: var(--bg-primary);
                border-radius: 10px;
                padding: 1.5rem;
                margin-bottom: 2rem;
                box-shadow: var(--shadow-md);
                border: 1px solid var(--border-color);
            }
            
            .data-table-container {
                background: var(--bg-primary);
                border-radius: 10px;
                padding: 1.5rem;
                box-shadow: var(--shadow-md);
                border: 1px solid var(--border-color);
            }
            
            .comment-info {
                display: flex;
                flex-direction: column;
                gap: 0.5rem;
            }
            
            .comment-content {
                background: var(--bg-secondary);
                border-left: 4px solid var(--border-color);
                padding: 0.75rem;
                border-radius: 6px;
                font-size: 0.9rem;
                line-height: 1.5;
                color: var(--text-primary);
                max-height: 100px;
                overflow-y: auto;
            }
            
            .comment-meta {
                display: flex;
                align-items: center;
                gap: 1rem;
                font-size: 0.85rem;
                color: var(--text-secondary);
            }
            
            .comment-author {
                display: flex;
                align-items: center;
                gap: 0.5rem;
                font-weight: 600;
                color: var(--text-primary);
            }
            
            .author-avatar {
                width: 30px;
                height: 30px;
                border-radius: 50%;
                background: var(--border-color);
                display: flex;
                align-items: center;
                justify-content: center;
                font-weight: bold;
                color: var(--text-primary);
                font-size: 0.8rem;
            }
            
            .news-link {
                color: var(--blue-secondary);
                text-decoration: none;
                font-weight: 500;
                max-width: 200px;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
                display: inline-block;
            }
            
            .news-link:hover {
                text-decoration: underline;
            }
            
            .status-badge {
                padding: 0.25rem 0.75rem;
                border-radius: 20px;
                font-size: 0.8rem;
                font-weight: 500;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }
            
            .status-approved {
                background: #d1fae5;
                color: #065f46;
            }
            
            .status-pending {
                background: #fef3c7;
                color: #92400e;
            }
            
            .status-rejected {
                background: #fee2e2;
                color: #991b1b;
            }
            
            .action-buttons {
                display: flex;
                gap: 0.5rem;
                flex-wrap: wrap;
            }
            
            .btn-sm {
                padding: 0.375rem 0.75rem;
                font-size: 0.875rem;
            }
            
            .toolbar {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 1.5rem;
                flex-wrap: wrap;
                gap: 1rem;
            }
            
            .bulk-actions {
                display: flex;
                gap: 0.5rem;
                align-items: center;
                flex-wrap: wrap;
            }
            
            .search-box {
                min-width: 300px;
            }
            
            .dialog-content {
                padding: 1rem;
            }
            
            .form-group {
                margin-bottom: 1.5rem;
            }
            
            .form-label {
                display: block;
                margin-bottom: 0.5rem;
                font-weight: 600;
                color: #374151;
            }
            
            .comment-full {
                background: #f8fafc;
                border: 1px solid #e5e7eb;
                border-radius: 8px;
                padding: 1rem;
                margin-bottom: 1rem;
                line-height: 1.6;
            }
            
            .moderation-actions {
                background: #f1f5f9;
                border-radius: 8px;
                padding: 1rem;
                margin-top: 1rem;
            }
            
            .moderation-reason {
                margin-top: 1rem;
            }
            
            .comment-history {
                background: #fafafa;
                border-radius: 6px;
                padding: 0.75rem;
                margin-top: 1rem;
                font-size: 0.9rem;
            }
            
            .history-item {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 0.5rem 0;
                border-bottom: 1px solid #e5e7eb;
            }
            
            .history-item:last-child {
                border-bottom: none;
            }
            
            .history-action {
                font-weight: 600;
                color: #374151;
            }
            
            .history-date {
                color: #6b7280;
                font-size: 0.8rem;
            }
            
            .quick-stats {
                display: flex;
                gap: 1rem;
                margin-bottom: 1rem;
                font-size: 0.9rem;
            }
            
            .quick-stat {
                display: flex;
                align-items: center;
                gap: 0.3rem;
                color: #6b7280;
            }
            
            @media (max-width: 768px) {
                .admin-title {
                    font-size: 1.5rem;
                }
                
                .toolbar {
                    flex-direction: column;
                    align-items: stretch;
                }
                
                .search-box {
                    min-width: auto;
                }
                
                .bulk-actions {
                    justify-content: center;
                }
                
                .action-buttons {
                    flex-direction: column;
                }
                
                .comment-meta {
                    flex-direction: column;
                    align-items: flex-start;
                    gap: 0.25rem;
                }
                
                .quick-stats {
                    flex-direction: column;
                    gap: 0.5rem;
                }
            }
        </style>
    </ui:define>
    
    <ui:define name="content">
        <!-- Referência: Sistema de Temas Claros e Escuros - project_rules.md -->
        <!-- Referência: Controle de Acesso - project_rules.md -->
        
        <!-- Controle de acesso: apenas ADMINISTRADOR, FUNDADOR ou COLABORADOR -->
        <c:if test="#{authBean.hasRole('ADMINISTRADOR') or authBean.hasRole('FUNDADOR') or authBean.hasRole('COLABORADOR')}">
        
        <!-- Cabeçalho Admin -->
        <div class="admin-header">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <h1 class="admin-title">
                            <i class="pi pi-comments"></i>
                            #{msg['admin.comments.title']}
                        </h1>
                        <p class="admin-subtitle">#{msg['admin.comments.subtitle']}</p>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="container">
            <!-- Cards de Estatísticas -->
            <div class="stats-cards">
                <div class="row">
                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="stat-card">
                            <div class="stat-icon stat-total">
                                <i class="pi pi-comments"></i>
                            </div>
                            <div class="stat-number">#{comentarioAdminBean.totalComentarios}</div>
                            <div class="stat-label">#{msg['admin.stats.total.comments']}</div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="stat-card">
                            <div class="stat-icon stat-approved">
                                <i class="pi pi-check-circle"></i>
                            </div>
                            <div class="stat-number">#{comentarioAdminBean.comentariosAprovados}</div>
                            <div class="stat-label">#{msg['admin.stats.approved.comments']}</div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="stat-card">
                            <div class="stat-icon stat-pending">
                                <i class="pi pi-clock"></i>
                            </div>
                            <div class="stat-number">#{comentarioAdminBean.comentariosPendentes}</div>
                            <div class="stat-label">#{msg['admin.stats.pending.comments']}</div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="stat-card">
                            <div class="stat-icon stat-rejected">
                                <i class="pi pi-times-circle"></i>
                            </div>
                            <div class="stat-number">#{comentarioAdminBean.comentariosRejeitados}</div>
                            <div class="stat-label">#{msg['admin.stats.rejected.comments']}</div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Painel de Filtros -->
            <div class="filters-panel">
                <h:form id="filtersForm">
                    <div class="row align-items-end">
                        <div class="col-lg-2 col-md-6 mb-3">
                            <label class="form-label">#{msg['filter.status']}</label>
                            <p:selectOneMenu value="#{comentarioAdminBean.filtroStatus}" 
                                           styleClass="form-control">
                                <f:selectItem itemLabel="#{msg['filter.all']}" itemValue=""/>
                                <f:selectItem itemLabel="#{msg['status.approved']}" itemValue="approved"/>
                                <f:selectItem itemLabel="#{msg['status.pending']}" itemValue="pending"/>
                                <f:selectItem itemLabel="#{msg['status.rejected']}" itemValue="rejected"/>
                            </p:selectOneMenu>
                        </div>
                        
                        <div class="col-lg-2 col-md-6 mb-3">
                            <label class="form-label">#{msg['filter.news']}</label>
                            <p:selectOneMenu value="#{comentarioAdminBean.filtroNoticia}" 
                                           styleClass="form-control"
                                           filter="true"
                                           filterMatchMode="contains">
                                <f:selectItem itemLabel="#{msg['filter.all']}" itemValue=""/>
                                <f:selectItems value="#{comentarioAdminBean.noticias}" 
                                             var="noticia" 
                                             itemLabel="#{noticia.titulo}" 
                                             itemValue="#{noticia.id}"/>
                            </p:selectOneMenu>
                        </div>
                        
                        <div class="col-lg-2 col-md-6 mb-3">
                            <label class="form-label">#{msg['filter.author']}</label>
                            <p:selectOneMenu value="#{comentarioAdminBean.filtroAutor}" 
                                           styleClass="form-control"
                                           filter="true"
                                           filterMatchMode="contains">
                                <f:selectItem itemLabel="#{msg['filter.all']}" itemValue=""/>
                                <f:selectItems value="#{comentarioAdminBean.autores}" 
                                             var="autor" 
                                             itemLabel="#{autor.nome}" 
                                             itemValue="#{autor.id}"/>
                            </p:selectOneMenu>
                        </div>
                        
                        <div class="col-lg-2 col-md-6 mb-3">
                            <label class="form-label">#{msg['filter.date.from']}</label>
                            <p:calendar value="#{comentarioAdminBean.dataInicio}" 
                                      pattern="#{msg['date.format.input']}"
                                      showOn="button"
                                      styleClass="form-control"/>
                        </div>
                        
                        <div class="col-lg-2 col-md-6 mb-3">
                            <label class="form-label">#{msg['filter.date.to']}</label>
                            <p:calendar value="#{comentarioAdminBean.dataFim}" 
                                      pattern="#{msg['date.format.input']}"
                                      showOn="button"
                                      styleClass="form-control"/>
                        </div>
                        
                        <div class="col-lg-2 col-md-6 mb-3">
                            <p:commandButton value="#{msg['button.filter']}" 
                                           action="#{comentarioAdminBean.aplicarFiltros}"
                                           update="commentsTable"
                                           styleClass="btn btn-primary me-2"
                                           icon="pi pi-search"/>
                            <p:commandButton value="#{msg['button.clear']}" 
                                           action="#{comentarioAdminBean.limparFiltros}"
                                           update="filtersForm commentsTable"
                                           styleClass="btn btn-outline-secondary"
                                           icon="pi pi-times"/>
                        </div>
                    </div>
                </h:form>
            </div>
            
            <!-- Tabela de Comentários -->
            <div class="data-table-container">
                <div class="toolbar">
                    <div class="bulk-actions">
                        <p:commandButton value="#{msg['button.approve.selected']}" 
                                       action="#{comentarioAdminBean.aprovarSelecionados}"
                                       update="commentsTable"
                                       styleClass="btn btn-success btn-sm"
                                       icon="pi pi-check"
                                       disabled="#{empty comentarioAdminBean.comentariosSelecionados}"/>
                        
                        <p:commandButton value="#{msg['button.reject.selected']}" 
                                       action="#{comentarioAdminBean.rejeitarSelecionados}"
                                       update="commentsTable"
                                       styleClass="btn btn-warning btn-sm"
                                       icon="pi pi-times"
                                       disabled="#{empty comentarioAdminBean.comentariosSelecionados}"/>
                        
                        <p:commandButton value="#{msg['button.delete.selected']}" 
                                       action="#{comentarioAdminBean.excluirSelecionados}"
                                       update="commentsTable"
                                       styleClass="btn btn-danger btn-sm"
                                       icon="pi pi-trash"
                                       disabled="#{empty comentarioAdminBean.comentariosSelecionados}">
                            <p:confirm header="#{msg['confirm.title']}" 
                                     message="#{msg['confirm.delete.selected.comments']}"
                                     icon="pi pi-exclamation-triangle"/>
                        </p:commandButton>
                        
                        <p:commandButton value="#{msg['button.cleanup.old']}" 
                                       action="#{comentarioAdminBean.limparComentariosAntigos}"
                                       update="commentsTable"
                                       styleClass="btn btn-outline-danger btn-sm"
                                       icon="pi pi-calendar-times">
                            <p:confirm header="#{msg['confirm.title']}" 
                                     message="#{msg['confirm.cleanup.old.comments']}"
                                     icon="pi pi-exclamation-triangle"/>
                        </p:commandButton>
                    </div>
                    
                    <div class="search-box">
                        <h:form>
                            <p:inputText value="#{comentarioAdminBean.termoPesquisa}" 
                                       placeholder="#{msg['search.comments.placeholder']}"
                                       styleClass="form-control">
                                <p:ajax event="keyup" 
                                      listener="#{comentarioAdminBean.pesquisar}" 
                                      update="commentsTable" 
                                      delay="500"/>
                            </p:inputText>
                        </h:form>
                    </div>
                </div>
                
                <h:form id="commentsTableForm">
                    <p:dataTable id="commentsTable" 
                               value="#{comentarioAdminBean.comentarios}" 
                               var="comentario"
                               lazy="true"
                               paginator="true"
                               rows="15"
                               paginatorPosition="both"
                               paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
                               rowsPerPageTemplate="10,15,25"
                               selection="#{comentarioAdminBean.comentariosSelecionados}"
                               rowKey="#{comentario.id}"
                               styleClass="table table-striped"
                               emptyMessage="#{msg['table.no.records']}"
                               currentPageReportTemplate="#{msg['table.pagination.template']}">
                        
                        <p:column selectionMode="multiple" style="width:3rem"/>
                        
                        <p:column headerText="#{msg['table.comment.info']}" style="width:45%">
                            <div class="comment-info">
                                <div class="comment-author">
                                    <div class="author-avatar">
                                        #{fn:substring(comentario.autor.nome, 0, 1)}
                                    </div>
                                    #{comentario.autor.nome}
                                </div>
                                
                                <div class="comment-content">
                                    #{fn:substring(comentario.conteudo, 0, 200)}#{fn:length(comentario.conteudo) > 200 ? '...' : ''}
                                </div>
                                
                                <div class="comment-meta">
                                    <span class="quick-stat">
                                        <i class="pi pi-file"></i>
                                        <a href="#" class="news-link" title="#{comentario.noticia.titulo}">
                                            #{fn:substring(comentario.noticia.titulo, 0, 30)}#{fn:length(comentario.noticia.titulo) > 30 ? '...' : ''}
                                        </a>
                                    </span>
                                    
                                    <span class="quick-stat">
                                        <i class="pi pi-calendar"></i>
                                        <h:outputText value="#{comentario.dataCriacao}">
                                            <f:convertDateTime pattern="#{msg['date.format.short']}"/>
                                        </h:outputText>
                                    </span>
                                    
                                    <span class="quick-stat">
                                        <i class="pi pi-info-circle"></i>
                                        #{fn:length(comentario.conteudo)} caracteres
                                    </span>
                                </div>
                            </div>
                        </p:column>
                        
                        <p:column headerText="#{msg['table.status']}" sortBy="#{comentario.aprovado}" style="width:10%">
                            <span class="status-badge #{comentario.aprovado == null ? 'status-pending' : (comentario.aprovado ? 'status-approved' : 'status-rejected')}">
                                <i class="pi #{comentario.aprovado == null ? 'pi-clock' : (comentario.aprovado ? 'pi-check' : 'pi-times')}"></i>
                                #{comentario.aprovado == null ? msg['status.pending'] : (comentario.aprovado ? msg['status.approved'] : msg['status.rejected'])}
                            </span>
                        </p:column>
                        
                        <p:column headerText="#{msg['table.moderation.date']}" sortBy="#{comentario.dataModeracao}" style="width:12%">
                            <h:outputText value="#{comentario.dataModeracao}" rendered="#{comentario.dataModeracao != null}">
                                <f:convertDateTime pattern="#{msg['date.format.short']}"/>
                            </h:outputText>
                            <span class="text-muted" rendered="#{comentario.dataModeracao == null}">#{msg['status.not.moderated']}</span>
                        </p:column>
                        
                        <p:column headerText="#{msg['table.moderator']}" style="width:10%">
                            <span rendered="#{comentario.moderador != null}">#{comentario.moderador.nome}</span>
                            <span class="text-muted" rendered="#{comentario.moderador == null}">-</span>
                        </p:column>
                        
                        <p:column headerText="#{msg['table.actions']}" style="width:13%">
                            <div class="action-buttons">
                                <p:commandButton icon="pi pi-eye" 
                                               title="#{msg['button.view']}"
                                               action="#{comentarioAdminBean.visualizarComentario(comentario)}"
                                               oncomplete="PF('commentDialog').show()"
                                               update="commentDialogContent"
                                               styleClass="btn btn-outline-info btn-sm"/>
                                
                                <p:commandButton icon="pi pi-check" 
                                               title="#{msg['button.approve']}"
                                               action="#{comentarioAdminBean.aprovarComentario(comentario)}"
                                               update="commentsTable"
                                               styleClass="btn btn-outline-success btn-sm"
                                               rendered="#{comentario.aprovado != true}">
                                    <p:confirm header="#{msg['confirm.title']}" 
                                             message="#{msg['confirm.approve.comment']}"
                                             icon="pi pi-question-circle"/>
                                </p:commandButton>
                                
                                <p:commandButton icon="pi pi-times" 
                                               title="#{msg['button.reject']}"
                                               action="#{comentarioAdminBean.rejeitarComentario(comentario)}"
                                               update="commentsTable"
                                               styleClass="btn btn-outline-warning btn-sm"
                                               rendered="#{comentario.aprovado != false}">
                                    <p:confirm header="#{msg['confirm.title']}" 
                                             message="#{msg['confirm.reject.comment']}"
                                             icon="pi pi-exclamation-triangle"/>
                                </p:commandButton>
                                
                                <p:commandButton icon="pi pi-trash" 
                                               title="#{msg['button.delete']}"
                                               action="#{comentarioAdminBean.excluirComentario(comentario)}"
                                               update="commentsTable"
                                               styleClass="btn btn-outline-danger btn-sm">
                                    <p:confirm header="#{msg['confirm.title']}" 
                                             message="#{msg['confirm.delete.comment']}"
                                             icon="pi pi-exclamation-triangle"/>
                                </p:commandButton>
                            </div>
                        </p:column>
                    </p:dataTable>
                </h:form>
            </div>
        </div>
        
        <!-- Dialog de Visualização de Comentário -->
        <p:dialog id="commentDialog" 
                widgetVar="commentDialog" 
                header="#{msg['dialog.view.comment']}"
                modal="true" 
                width="800" 
                height="600"
                resizable="true"
                closeOnEscape="true">
            
            <div id="commentDialogContent">
                <div class="dialog-content" rendered="#{comentarioAdminBean.comentarioVisualizacao != null}">
                    <div class="row">
                        <div class="col-md-8">
                            <h5>#{msg['form.comment.content']}</h5>
                            <div class="comment-full">#{comentarioAdminBean.comentarioVisualizacao.conteudo}</div>
                            
                            <h6>#{msg['form.comment.details']}</h6>
                            <div class="quick-stats">
                                <div class="quick-stat">
                                    <i class="pi pi-user"></i>
                                    <strong>#{msg['form.author']}:</strong> #{comentarioAdminBean.comentarioVisualizacao.autor.nome}
                                </div>
                                
                                <div class="quick-stat">
                                    <i class="pi pi-file"></i>
                                    <strong>#{msg['form.news']}:</strong> 
                                    <a href="#" class="news-link">#{comentarioAdminBean.comentarioVisualizacao.noticia.titulo}</a>
                                </div>
                                
                                <div class="quick-stat">
                                    <i class="pi pi-calendar"></i>
                                    <strong>#{msg['form.creation.date']}:</strong>
                                    <h:outputText value="#{comentarioAdminBean.comentarioVisualizacao.dataCriacao}">
                                        <f:convertDateTime pattern="#{msg['date.format.full']}"/>
                                    </h:outputText>
                                </div>
                                
                                <div class="quick-stat">
                                    <i class="pi pi-info-circle"></i>
                                    <strong>#{msg['form.length']}:</strong> #{fn:length(comentarioAdminBean.comentarioVisualizacao.conteudo)} caracteres
                                </div>
                            </div>
                            
                            <!-- Histórico de Moderação -->
                            <div class="comment-history" rendered="#{not empty comentarioAdminBean.comentarioVisualizacao.historicoModeracao}">
                                <h6>#{msg['form.moderation.history']}</h6>
                                <ui:repeat value="#{comentarioAdminBean.comentarioVisualizacao.historicoModeracao}" var="historico">
                                    <div class="history-item">
                                        <div>
                                            <span class="history-action">#{historico.acao}</span>
                                            <span class="text-muted">por #{historico.moderador}</span>
                                        </div>
                                        <span class="history-date">
                                            <h:outputText value="#{historico.data}">
                                                <f:convertDateTime pattern="#{msg['date.format.short']}"/>
                                            </h:outputText>
                                        </span>
                                    </div>
                                </ui:repeat>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <h5>#{msg['form.moderation.actions']}</h5>
                            
                            <div class="moderation-actions">
                                <div class="mb-3">
                                    <strong>#{msg['form.current.status']}:</strong><br/>
                                    <span class="status-badge #{comentarioAdminBean.comentarioVisualizacao.aprovado == null ? 'status-pending' : (comentarioAdminBean.comentarioVisualizacao.aprovado ? 'status-approved' : 'status-rejected')}">
                                        #{comentarioAdminBean.comentarioVisualizacao.aprovado == null ? msg['status.pending'] : (comentarioAdminBean.comentarioVisualizacao.aprovado ? msg['status.approved'] : msg['status.rejected'])}
                                    </span>
                                </div>
                                
                                <div class="mb-3" rendered="#{comentarioAdminBean.comentarioVisualizacao.dataModeracao != null}">
                                    <strong>#{msg['form.moderation.date']}:</strong><br/>
                                    <h:outputText value="#{comentarioAdminBean.comentarioVisualizacao.dataModeracao}">
                                        <f:convertDateTime pattern="#{msg['date.format.full']}"/>
                                    </h:outputText>
                                </div>
                                
                                <div class="mb-3" rendered="#{comentarioAdminBean.comentarioVisualizacao.moderador != null}">
                                    <strong>#{msg['form.moderator']}:</strong><br/>
                                    #{comentarioAdminBean.comentarioVisualizacao.moderador.nome}
                                </div>
                                
                                <div class="mb-3" rendered="#{not empty comentarioAdminBean.comentarioVisualizacao.motivoRejeicao}">
                                    <strong>#{msg['form.rejection.reason']}:</strong><br/>
                                    <div class="comment-content">#{comentarioAdminBean.comentarioVisualizacao.motivoRejeicao}</div>
                                </div>
                                
                                <h:form>
                                    <div class="d-grid gap-2">
                                        <p:commandButton value="#{msg['button.approve']}" 
                                                       action="#{comentarioAdminBean.aprovarComentarioDialog}"
                                                       update="commentsTable commentDialogContent"
                                                       styleClass="btn btn-success"
                                                       icon="pi pi-check"
                                                       rendered="#{comentarioAdminBean.comentarioVisualizacao.aprovado != true}">
                                            <p:confirm header="#{msg['confirm.title']}" 
                                                     message="#{msg['confirm.approve.comment']}"
                                                     icon="pi pi-question-circle"/>
                                        </p:commandButton>
                                        
                                        <p:commandButton value="#{msg['button.reject']}" 
                                                       onclick="PF('rejectDialog').show()"
                                                       styleClass="btn btn-warning"
                                                       icon="pi pi-times"
                                                       type="button"
                                                       rendered="#{comentarioAdminBean.comentarioVisualizacao.aprovado != false}"/>
                                        
                                        <p:commandButton value="#{msg['button.delete']}" 
                                                       action="#{comentarioAdminBean.excluirComentarioDialog}"
                                                       update="commentsTable"
                                                       oncomplete="PF('commentDialog').hide()"
                                                       styleClass="btn btn-danger"
                                                       icon="pi pi-trash">
                                            <p:confirm header="#{msg['confirm.title']}" 
                                                     message="#{msg['confirm.delete.comment']}"
                                                     icon="pi pi-exclamation-triangle"/>
                                        </p:commandButton>
                                    </div>
                                    
                                    <div class="moderation-reason" rendered="#{comentarioAdminBean.comentarioVisualizacao.aprovado != true}">
                                        <label class="form-label">#{msg['form.rejection.reason']}</label>
                                        <p:inputTextarea value="#{comentarioAdminBean.motivoRejeicao}" 
                                                       rows="3"
                                                       styleClass="form-control"
                                                       placeholder="#{msg['form.rejection.reason.placeholder']}"/>
                                    </div>
                                </h:form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="dialog-footer d-flex justify-content-end mt-3">
                <p:commandButton value="#{msg['button.close']}" 
                               onclick="PF('commentDialog').hide()" 
                               styleClass="btn btn-outline-secondary"
                               type="button"/>
            </div>
        </p:dialog>
        
        <!-- Dialog de Rejeição -->
        <p:dialog id="rejectDialog" 
                widgetVar="rejectDialog" 
                header="#{msg['dialog.reject.comment']}"
                modal="true" 
                width="500" 
                height="300"
                resizable="false"
                closeOnEscape="true">
            
            <h:form>
                <div class="dialog-content">
                    <p>#{msg['dialog.reject.comment.message']}</p>
                    
                    <div class="form-group">
                        <label class="form-label">#{msg['form.rejection.reason']} <span class="required">*</span></label>
                        <p:inputTextarea value="#{comentarioAdminBean.motivoRejeicao}" 
                                       rows="4"
                                       styleClass="form-control"
                                       required="true"
                                       requiredMessage="#{msg['validation.rejection.reason.required']}"
                                       placeholder="#{msg['form.rejection.reason.placeholder']}"/>
                    </div>
                </div>
                
                <div class="dialog-footer d-flex justify-content-end gap-2 mt-3">
                    <p:commandButton value="#{msg['button.cancel']}" 
                                   onclick="PF('rejectDialog').hide()" 
                                   styleClass="btn btn-outline-secondary"
                                   type="button"/>
                    
                    <p:commandButton value="#{msg['button.reject']}" 
                                   action="#{comentarioAdminBean.rejeitarComentarioComMotivo}"
                                   update="commentsTable commentDialogContent"
                                   oncomplete="if (args && !args.validationFailed) { PF('rejectDialog').hide(); PF('commentDialog').hide(); }"
                                   styleClass="btn btn-warning"
                                   icon="pi pi-times"/>
                </div>
            </h:form>
        </p:dialog>
        
        <!-- Confirmação -->
        <p:confirmDialog global="true" showEffect="fade" hideEffect="fade" responsive="true" width="350">
            <p:commandButton value="#{msg['button.yes']}" type="button" styleClass="btn btn-primary ui-confirmdialog-yes" icon="pi pi-check"/>
            <p:commandButton value="#{msg['button.no']}" type="button" styleClass="btn btn-outline-secondary ui-confirmdialog-no" icon="pi pi-times"/>
        </p:confirmDialog>
    </ui:define>
    
    <ui:define name="javascript">
        <script type="text/javascript">
            // Atualizar estatísticas periodicamente
            // Referência: Sistema de Temas Claros e Escuros - project_rules.md
            // Estatísticas devem adaptar cores e contrastes conforme tema ativo
            function updateCommentStats() {
                if (typeof PrimeFaces !== 'undefined') {
                    // Implementar atualização automática das estatísticas
                }
            }
            
            // Atualizar a cada 30 segundos
            setInterval(updateCommentStats, 30000);
            
            // Atalhos de teclado
            document.addEventListener('keydown', function(e) {
                // Ctrl+A para aprovar comentário selecionado
                if (e.ctrlKey && e.key === 'a' && !e.shiftKey) {
                    e.preventDefault();
                    // Implementar aprovação rápida
                }
                
                // Ctrl+R para rejeitar comentário selecionado
                if (e.ctrlKey && e.key === 'r') {
                    e.preventDefault();
                    // Implementar rejeição rápida
                }
                
                // Escape para fechar dialogs
                if (e.key === 'Escape') {
                    if (PF('commentDialog').isVisible()) {
                        PF('commentDialog').hide();
                    }
                    if (PF('rejectDialog').isVisible()) {
                        PF('rejectDialog').hide();
                    }
                }
            });
            
            // Auto-refresh para comentários pendentes
            // Referência: Sistema de Temas Claros e Escuros - project_rules.md
            // Notificações visuais devem respeitar tema e preferências de acessibilidade
            function autoRefreshPendingComments() {
                const pendingCount = parseInt(document.querySelector('.stat-pending .stat-number')?.textContent || '0');
                
                if (pendingCount > 0) {
                    // Refresh mais frequente quando há comentários pendentes
                    setTimeout(() => {
                        if (typeof PrimeFaces !== 'undefined') {
                            // Implementar refresh automático
                        }
                    }, 10000); // 10 segundos
                }
            }
            
            // Inicializar auto-refresh
            document.addEventListener('DOMContentLoaded', autoRefreshPendingComments);
            
            // Contador de caracteres para motivo de rejeição
            document.addEventListener('DOMContentLoaded', function() {
                const rejectTextarea = document.querySelector('textarea[id*="motivoRejeicao"]');
                
                if (rejectTextarea) {
                    const counter = document.createElement('small');
                    counter.className = 'form-text text-muted float-end';
                    rejectTextarea.parentNode.appendChild(counter);
                    
                    function updateCounter() {
                        const length = rejectTextarea.value.length;
                        counter.textContent = `${length} caracteres`;
                        counter.style.color = length < 10 ? '#dc3545' : '#6c757d';
                    }
                    
                    rejectTextarea.addEventListener('input', updateCounter);
                    updateCounter();
                }
            });
            
            // Highlight de texto pesquisado
            // Referência: Sistema de Temas Claros e Escuros - project_rules.md
            // Destaque deve manter contraste adequado em ambos os temas
            function highlightSearchTerm() {
                const searchInput = document.querySelector('input[id*="termoPesquisa"]');
                const searchTerm = searchInput?.value?.trim();
                
                if (searchTerm && searchTerm.length > 2) {
                    const commentContents = document.querySelectorAll('.comment-content');
                    
                    commentContents.forEach(content => {
                        const text = content.textContent;
                        const regex = new RegExp(`(${searchTerm})`, 'gi');
                        const highlightedText = text.replace(regex, '<mark>$1</mark>');
                        content.innerHTML = highlightedText;
                    });
                }
            }
            
            // Aplicar highlight após pesquisa
            document.addEventListener('DOMContentLoaded', function() {
                const searchInput = document.querySelector('input[id*="termoPesquisa"]');
                if (searchInput) {
                    searchInput.addEventListener('input', () => {
                        setTimeout(highlightSearchTerm, 600);
                    });
                }
            });
        </script>
    </ui:define>
    
    <!-- Fechamento do controle de acesso -->
    </c:if>
    
    <!-- Mensagem de acesso negado -->
    <c:if test="#{not (authBean.hasRole('ADMINISTRADOR') or authBean.hasRole('FUNDADOR') or authBean.hasRole('COLABORADOR'))}">
        <div class="container mt-5">
            <div class="alert alert-danger text-center">
                <h4><i class="pi pi-exclamation-triangle"></i> #{msg['access.denied.title']}</h4>
                <p>#{msg['access.denied.admin.message']}</p>
                <p:button value="#{msg['button.back.home']}" outcome="/index" styleClass="btn btn-primary"/>
            </div>
        </div>
    </c:if>
    
</ui:composition>
</html>