version: '3.8'

services:
  # Spring Boot Application
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sistema_db
      - SPRING_DATASOURCE_USERNAME=sistema_user
      - SPRING_DATASOURCE_PASSWORD=sistema_pass
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      # Mailtrap SMTP Configuration
      - SPRING_MAIL_HOST=sandbox.smtp.mailtrap.io
      - SPRING_MAIL_PORT=2525
      - SPRING_MAIL_USERNAME=67af468e706c8e
      - SPRING_MAIL_PASSWORD=c9c83240f6d045
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=true
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=true
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_ENABLE=false
    depends_on:
      - postgres
      - redis
    networks:
      - sistema-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=sistema_db
      - POSTGRES_USER=sistema_user
      - POSTGRES_PASSWORD=sistema_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sistema-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sistema_user -d sistema_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - sistema-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

# Networks
networks:
  sistema-network:
    driver: bridge

# Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local