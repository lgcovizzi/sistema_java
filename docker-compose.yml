version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: sistema_java_postgres
    environment:
      POSTGRES_DB: sistema_java
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sistema_java_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: sistema_java_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sistema_java_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  mailhog:
    image: mailhog/mailhog:latest
    container_name: sistema_java_mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - sistema_java_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sistema_java_backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=sistema_java
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_started
    networks:
      - sistema_java_network
    volumes:
      - ./backend:/app
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  sistema_java_network:
    driver: bridge